---
version: 1
kind: component
meta:
  name: stack-k8s-gke
  brief: Google GKE
  version: 1.17
  source:
      dir: ../stack-k8s-gke/

requires:
  - gcp
provides:
  - kubernetes

lifecycle:
  verbs:
    - deploy
    - undeploy
  readyConditions:
    - dns: ${kubernetes.api.endpoint}
      url: https://${kubernetes.api.endpoint}
  options:
    random:
      bytes: 1536

parameters:
  - name: dns.domain
    env: DOMAIN_NAME
  - name: cloud.region
    empty: allow
    env: REGION
  - name: cloud.availabilityZone
    empty: allow
    env: ZONE
  - name: cloud.gcpProjectId
    env: PROJECT

  - name: terraform.bucket.name
    env: STATE_BUCKET
  - name: terraform.bucket.region
    env: STATE_REGION

  - name: component.kubernetes
    parameters:
    - name: serviceaccount
      value: asi
      env: SERVICE_ACCOUNT
    - name: gke
      parameters:
      - name: version
        env: TF_VAR_gke_kubernetes_version_prefix
        value: 1.17
      - name: cluster
        empty: allow
        env: CLUSTER_NAME
      - name: nodeMachineType
        value: g1-small
        env: TF_VAR_node_machine_type
      - name: minNodeCount
        value: 1
        env: TF_VAR_min_node_count
      - name: maxNodeCount
        value: ${component.kubernetes.gke.minNodeCount}
        env: TF_VAR_max_node_count
      - name: preemptibleNodes
        value: false
        env: TF_VAR_preemptible
      - name: volume.size
        value: 30
        env: TF_VAR_volume_size
      - name: addons
        parameters:
        - name: istio
          value: false
          env: TF_VAR_addons_istio

outputs:
  - name: cloud.kind
    value: gcp
  - name: cloud.region
    fromTfVar: region
  - name: cloud.availabilityZone
    fromTfVar: zone
  - name: cloud.network.name
    fromTfVar: network_name
  - name: dns.domain
  - name: dns.name
    fromTfVar: dns_name
  - name: dns.baseDomain
    fromTfVar: dns_base_domain
  - name: kubernetes.flavor
    value: gke
  - name: kubernetes.version
    value: ${component.kubernetes.gke.version}
  - name: kubernetes.api.endpoint
    fromTfVar: endpoint
  - name: kubernetes.api.caCert
    fromTfVar: api_ca_crt
  - name: kubernetes.api.token
    fromTfVar: token/base64
  - name: kubernetes.gke.cluster
    fromTfVar: cluster_name
