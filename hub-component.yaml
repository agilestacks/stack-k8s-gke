---
version: 1
kind: component
meta:
  name: stack-k8s-gke
  brief: Google GKE
  source:
      dir: ../stack-k8s-gke/

requires:
  - gcp
provides:
  - kubernetes

lifecycle:
  verbs:
    - deploy
    - undeploy
  readyConditions:
    - dns: ${kubernetes.api.endpoint}
      url: https://${kubernetes.api.endpoint}

parameters:
  - name: kubernetes.gke.cluster
    env: CLUSTER_NAME
    value: ${dns.name}
  - name: dns.domain
    env: DOMAIN_NAME
  - name: cloud.region
    empty: allow
    env: REGION
  - name: cloud.availabilityZone
    empty: allow
    env: ZONE
  - name: cloud.gcpProjectId
    env: PROJECT

  - name: terraform.bucket.name
    env: STATE_BUCKET
  - name: terraform.bucket.region
    env: STATE_REGION

  - name: component.kubernetes
    parameters:
    - name: serviceaccount
      value: asi
      env: SERVICE_ACCOUNT
    - name: gke
      parameters:
      - name: nodeMachineType
        env: TF_VAR_node_machine_type
      - name: minNodeCount
        env: TF_VAR_min_node_count
      - name: maxNodeCount
        env: TF_VAR_max_node_count
      - name: preemptibleNodes
        env: TF_VAR_preemptible

outputs:
  - name: cloud.kind
    value: gcp
  - name: cloud.region
    fromTfVar: region
  - name: cloud.availabilityZone
  - name: cloud.network.name
    fromTfVar: network_name
  - name: dns.domain
  - name: dns.name
    fromTfVar: dns_name
  - name: dns.baseDomain
    fromTfVar: dns_base_domain
  - name: kubernetes.gke.cluster
  - name: kubernetes.flavor
    value: gke
  - name: kubernetes.api.endpoint
    fromTfVar: endpoint
  - name: kubernetes.api.caCert
    fromTfVar: api_ca_crt
  - name: kubernetes.api.token
    fromTfVar: token
